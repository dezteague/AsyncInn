// <auto-generated />
using AsyncInn.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AsyncInn.Migrations
{
    [DbContext(typeof(AsyncInnDbContext))]
    [Migration("20190214191312_amenitycount")]
    partial class amenitycount
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AsyncInn.Models.Amenities", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Microwave"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Coffee Maker"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Mini Bar"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Hair Dryer"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Iron"
                        });
                });

            modelBuilder.Entity("AsyncInn.Models.Hotel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<int>("RoomCount");

                    b.HasKey("ID");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "Seattle, WA",
                            Name = "Async Downtown Seattle",
                            Phone = "(206)555-1234",
                            RoomCount = 0
                        },
                        new
                        {
                            ID = 2,
                            Address = "West Seattle, WA",
                            Name = "Async West Seattle",
                            Phone = "(206)555-5678",
                            RoomCount = 0
                        },
                        new
                        {
                            ID = 3,
                            Address = "Bellevue, WA",
                            Name = "Async Bellevue",
                            Phone = "(425)555-9012",
                            RoomCount = 0
                        },
                        new
                        {
                            ID = 4,
                            Address = "Olympia, WA",
                            Name = "Async Olympia",
                            Phone = "(360)555-2468",
                            RoomCount = 0
                        },
                        new
                        {
                            ID = 5,
                            Address = "Portland, Oregon",
                            Name = "Async Portland",
                            Phone = "(503)555-9876",
                            RoomCount = 0
                        });
                });

            modelBuilder.Entity("AsyncInn.Models.HotelRoom", b =>
                {
                    b.Property<int>("HotelID");

                    b.Property<int>("RoomNumber");

                    b.Property<bool>("PetFriendly");

                    b.Property<decimal>("Rate");

                    b.Property<int>("RoomID");

                    b.HasKey("HotelID", "RoomNumber");

                    b.HasIndex("RoomID");

                    b.ToTable("HotelRooms");
                });

            modelBuilder.Entity("AsyncInn.Models.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmenityCount");

                    b.Property<int>("Layout");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AmenityCount = 0,
                            Layout = 0,
                            Name = "Belltown Studio"
                        },
                        new
                        {
                            ID = 2,
                            AmenityCount = 0,
                            Layout = 0,
                            Name = "Space Needle Studio"
                        },
                        new
                        {
                            ID = 3,
                            AmenityCount = 0,
                            Layout = 1,
                            Name = "Rain Room"
                        },
                        new
                        {
                            ID = 4,
                            AmenityCount = 0,
                            Layout = 1,
                            Name = "Seahawks Manor"
                        },
                        new
                        {
                            ID = 5,
                            AmenityCount = 0,
                            Layout = 2,
                            Name = "Mariner Suite"
                        },
                        new
                        {
                            ID = 6,
                            AmenityCount = 0,
                            Layout = 2,
                            Name = "Sonic Suite"
                        });
                });

            modelBuilder.Entity("AsyncInn.Models.RoomAmenities", b =>
                {
                    b.Property<int>("AmenitiesID");

                    b.Property<int>("RoomID");

                    b.HasKey("AmenitiesID", "RoomID");

                    b.HasIndex("RoomID");

                    b.ToTable("RoomAmenities");
                });

            modelBuilder.Entity("AsyncInn.Models.HotelRoom", b =>
                {
                    b.HasOne("AsyncInn.Models.Hotel", "Hotel")
                        .WithMany("HotelRoom")
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AsyncInn.Models.Room", "Room")
                        .WithMany("HotelRoom")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AsyncInn.Models.RoomAmenities", b =>
                {
                    b.HasOne("AsyncInn.Models.Amenities", "Amenities")
                        .WithMany("RoomAmenities")
                        .HasForeignKey("AmenitiesID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AsyncInn.Models.Room", "Room")
                        .WithMany("RoomAmenities")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
